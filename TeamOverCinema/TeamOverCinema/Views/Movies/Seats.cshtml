@model TeamOverCinema.Models.Movies

@{
    ViewData["Title"] = "Seats";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Seats</h1>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            Movie Name:
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.MovieName)
        </dd>
        <dt class = "col-sm-2">
            Seats:
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Seats)
        </dd>
        <dt class = "col-sm-2">
            Seats Left:
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SeatsTaken)
        </dd>
    </dl>
</div>
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link rel="stylesheet" href="~/css/site.css" />
    <title>Movie Seat Booking</title>
  </head>
  <body>
    <div class="movie-container">
      <label>What Membership are you:</label>
      @if (User.Identity.IsAuthenticated)
        {
            <select id="movie">
                <option value="15">Members ($15)</option>
            </select>
        } else
        {
            <select id="movie">
        <option value="20">Non-members ($20)</option>
            </select>
        }


    <ul class="showcase">
      <li>
        <div class="seat"></div>
        <small>N/A</small>
      </li>
      <li>
        <div class="seat selected"></div>
        <small>Selected Cost</small>
      </li>
      <li>
        <div class="seat occupied"></div>
        <small>First come first served</small>
      </li>
    </ul>

    
    <div class="container">
        <div class="screen"></div>
      
      <br><br>
      <div class="centre">
      <div class="roww">
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
      </div>
      <div class="roww">
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
      </div>
      <div class="roww">
       <div class="seat occupied"></div>
        <div class="seat occupied"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
      </div>
      <div class="roww">
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
      </div>
      <div class="roww">
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
      </div>
      <div class="roww">
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat"></div>
        <div class="seat occupied"></div>
        <div class="seat occupied"></div>
      </div>
    </div>
    </div>
    <p class="centre2">
      You have selected <span id="count">0</span> seats for a price of $<span id="total" >0</span>
    </p>

    <div class="CentreButton">
<button class= "colors">
        <a class="button2" href='https://localhost:44312/Home/Payment' alt='Broken Link'>Proceed</a>
        
    </button>
    </div>
    </div>

    <script>
        const container = document.querySelector('.container');
const seats = document.querySelectorAll('.roww .seat:not(.occupied)');
const count = document.getElementById('count');
const total = document.getElementById('total');
const movieSelect = document.getElementById('movie');

populateUI();

let ticketPrice = +movieSelect.value;

// Save selected movie index and price
function setMovieData(movieIndex, moviePrice) {
    localStorage.setItem('selectedMovieIndex', movieIndex);
    localStorage.setItem('selectedMoviePrice', moviePrice);
}

// Update total and count
function updateSelectedCount() {
    const selectedSeats = document.querySelectorAll('.roww .seat.selected');

    const seatsIndex = [...selectedSeats].map(seat => [...seats].indexOf(seat));

    localStorage.setItem('selectedSeats', JSON.stringify(seatsIndex));

    const selectedSeatsCount = selectedSeats.length;

    count.innerText = selectedSeatsCount;
    total.innerText = selectedSeatsCount * ticketPrice;

    setMovieData(movieSelect.selectedIndex, movieSelect.value);
}

// Get data from localstorage and populate UI
function populateUI() {
    const selectedSeats = JSON.parse(localStorage.getItem('selectedSeats'));

    if (selectedSeats !== null && selectedSeats.length > 0) {
        seats.forEach((seat, index) => {
            if (selectedSeats.indexOf(index) > -1) {
                seat.classList.add('selected');
            }
        });
    }

    const selectedMovieIndex = localStorage.getItem('selectedMovieIndex');

    if (selectedMovieIndex !== null) {
        movieSelect.selectedIndex = selectedMovieIndex;
    }
}

// Movie select event
movieSelect.addEventListener('change', e => {
    ticketPrice = +e.target.value;
    setMovieData(e.target.selectedIndex, e.target.value);
    updateSelectedCount();
});

// Seat click event
container.addEventListener('click', e => {
    if (
        e.target.classList.contains('seat') &&
        !e.target.classList.contains('occupied')
    ) {
        e.target.classList.toggle('selected');

        updateSelectedCount();
    }
});

// Initial count and total set
updateSelectedCount();

        
    </script>
    <script src="~/js/site.js"></script>



  </body>
